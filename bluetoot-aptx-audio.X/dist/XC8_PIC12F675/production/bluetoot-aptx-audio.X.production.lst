

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Dec 26 17:37:44 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x5E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC12F675 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0019                     	;# 
    61  001E                     	;# 
    62  001F                     	;# 
    63  0081                     	;# 
    64  0085                     	;# 
    65  008C                     	;# 
    66  008E                     	;# 
    67  0090                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0096                     	;# 
    71  0099                     	;# 
    72  009A                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  009F                     	;# 
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0019                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  008C                     	;# 
    98  008E                     	;# 
    99  0090                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0096                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0019                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  008C                     	;# 
   130  008E                     	;# 
   131  0090                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0096                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0019                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  008C                     	;# 
   162  008E                     	;# 
   163  0090                     	;# 
   164  0095                     	;# 
   165  0096                     	;# 
   166  0096                     	;# 
   167  0099                     	;# 
   168  009A                     	;# 
   169  009A                     	;# 
   170  009B                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  001E                     _ADRESH	set	30
   176  0019                     _CMCON	set	25
   177  001F                     _ADCON0	set	31
   178  00F9                     _GO_nDONE	set	249
   179  002C                     _GP4	set	44
   180  002D                     _GP5	set	45
   181  0029                     _GP1	set	41
   182  002A                     _GP2	set	42
   183  009E                     _ADRESL	set	158
   184  0099                     _VRCON	set	153
   185  009F                     _ANSEL	set	159
   186  0085                     _TRISIO	set	133
   187                           
   188                           	psect	cinit
   189  03FD                     start_initialization:	
   190                           ; #config settings
   191                           
   192  03FD                     __initialization:
   193  03FD                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196  03FD                     __end_of__initialization:
   197  03FD  0183               	clrf	3
   198  03FE  2BAE               	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	cstackCOMMON
   201  0000                     __pcstackCOMMON:
   202  0000                     ??_InitApp:
   203                           
   204                           	psect	cstackBANK0
   205  0020                     __pcstackBANK0:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0020                     ?_InitApp:
   209  0020                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0020                     ?_GetADCValue:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 2 bytes @ 0x0
   217  0020                     	ds	2
   218  0022                     ??_GetADCValue:
   219                           
   220                           ; 1 bytes @ 0x2
   221  0022                     	ds	2
   222  0024                     ??_main:
   223                           
   224                           ; 1 bytes @ 0x4
   225  0024                     	ds	3
   226  0027                     main@ADC_value:
   227                           
   228                           ; 2 bytes @ 0x7
   229  0027                     	ds	2
   230                           
   231                           	psect	maintext
   232  03AE                     __pmaintext:	
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 40 in file "main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;  ADC_value       2    7[BANK0 ] unsigned int 
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0, pclath, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : B00/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0
   252 ;;      Params:         0       0
   253 ;;      Locals:         0       2
   254 ;;      Temps:          0       3
   255 ;;      Totals:         0       5
   256 ;;Total ram usage:        5 bytes
   257 ;; Hardware stack levels required when called:    1
   258 ;; This function calls:
   259 ;;		_GetADCValue
   260 ;;		_InitApp
   261 ;; This function is called by:
   262 ;;		Startup code after reset
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           
   267                           ;psect for function _main
   268  03AE                     _main:
   269  03AE                     l716:	
   270                           ;incstack = 0
   271                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   272                           
   273                           
   274                           ;main.c: 46:     InitApp();
   275  03AE  2381               	fcall	_InitApp
   276  03AF                     l718:
   277                           
   278                           ;main.c: 47:     GP2 = 1;
   279  03AF  1283               	bcf	3,5	;RP0=0, select bank0
   280  03B0  1505               	bsf	5,2	;volatile
   281  03B1                     l720:
   282                           
   283                           ;main.c: 48:     GP1 = 1;
   284  03B1  1485               	bsf	5,1	;volatile
   285  03B2                     l722:
   286                           
   287                           ;main.c: 50:     GP5 = 1;
   288  03B2  1685               	bsf	5,5	;volatile
   289  03B3                     l724:
   290                           
   291                           ;main.c: 51:     GP4 = 1;
   292  03B3  1605               	bsf	5,4	;volatile
   293  03B4                     l726:
   294                           
   295                           ;main.c: 53:     _delay((unsigned long)((5000)*(4000000/4000.0)));
   296  03B4  301A               	movlw	26
   297  03B5  00A6               	movwf	??_main+2
   298  03B6  305E               	movlw	94
   299  03B7  00A5               	movwf	??_main+1
   300  03B8  306E               	movlw	110
   301  03B9  00A4               	movwf	??_main
   302  03BA                     u117:
   303  03BA  0BA4               	decfsz	??_main,f
   304  03BB  2BBA               	goto	u117
   305  03BC  0BA5               	decfsz	??_main+1,f
   306  03BD  2BBA               	goto	u117
   307  03BE  0BA6               	decfsz	??_main+2,f
   308  03BF  2BBA               	goto	u117
   309  03C0  0000               	nop
   310  03C1                     l728:
   311                           
   312                           ;main.c: 54:     GP1 = 0;
   313  03C1  1283               	bcf	3,5	;RP0=0, select bank0
   314  03C2  1085               	bcf	5,1	;volatile
   315  03C3                     l730:
   316  03C3                     l732:
   317                           
   318                           ;main.c: 60:     {;main.c: 64:     ADC_value = GetADCValue();
   319  03C3  238E               	fcall	_GetADCValue
   320  03C4  1283               	bcf	3,5	;RP0=0, select bank0
   321  03C5  0821               	movf	?_GetADCValue+1,w
   322  03C6  00A8               	movwf	main@ADC_value+1
   323  03C7  0820               	movf	?_GetADCValue,w
   324  03C8  00A7               	movwf	main@ADC_value
   325  03C9                     l734:
   326                           
   327                           ;main.c: 76:           if (ADC_value > 210 && ADC_value < 240)
   328  03C9  3000               	movlw	0
   329  03CA  0228               	subwf	main@ADC_value+1,w
   330  03CB  30D3               	movlw	211
   331  03CC  1903               	skipnz
   332  03CD  0227               	subwf	main@ADC_value,w
   333  03CE  1C03               	skipc
   334  03CF  2BD1               	goto	u71
   335  03D0  2BD2               	goto	u70
   336  03D1                     u71:
   337  03D1  2BE4               	goto	l742
   338  03D2                     u70:
   339  03D2                     l736:
   340  03D2  3000               	movlw	0
   341  03D3  0228               	subwf	main@ADC_value+1,w
   342  03D4  30F0               	movlw	240
   343  03D5  1903               	skipnz
   344  03D6  0227               	subwf	main@ADC_value,w
   345  03D7  1803               	skipnc
   346  03D8  2BDA               	goto	u81
   347  03D9  2BDB               	goto	u80
   348  03DA                     u81:
   349  03DA  2BE4               	goto	l742
   350  03DB                     u80:
   351  03DB                     l738:
   352                           
   353                           ;main.c: 77:             {;main.c: 78:             GP5 = 0;
   354  03DB  1285               	bcf	5,5	;volatile
   355  03DC                     l740:
   356                           
   357                           ;main.c: 79:             _delay((unsigned long)((1)*(4000000/4000.0)));
   358  03DC  30C7               	movlw	199
   359  03DD  00A4               	movwf	??_main
   360  03DE                     u127:
   361  03DE  2BDF               	nop2
   362  03DF  0BA4               	decfsz	??_main,f
   363  03E0  2BDE               	goto	u127
   364  03E1  2BE2               	nop2
   365  03E2  2BE3               	nop2
   366                           
   367                           ;main.c: 80:             }
   368  03E3  2BC3               	goto	l732
   369  03E4                     l742:
   370  03E4  3001               	movlw	1
   371  03E5  0228               	subwf	main@ADC_value+1,w
   372  03E6  3073               	movlw	115
   373  03E7  1903               	skipnz
   374  03E8  0227               	subwf	main@ADC_value,w
   375  03E9  1C03               	skipc
   376  03EA  2BEC               	goto	u91
   377  03EB  2BED               	goto	u90
   378  03EC                     u91:
   379  03EC  2BF8               	goto	l25
   380  03ED                     u90:
   381  03ED                     l744:
   382  03ED  3001               	movlw	1
   383  03EE  0228               	subwf	main@ADC_value+1,w
   384  03EF  3090               	movlw	144
   385  03F0  1903               	skipnz
   386  03F1  0227               	subwf	main@ADC_value,w
   387  03F2  1803               	skipnc
   388  03F3  2BF5               	goto	u101
   389  03F4  2BF6               	goto	u100
   390  03F5                     u101:
   391  03F5  2BF8               	goto	l25
   392  03F6                     u100:
   393  03F6                     l746:
   394                           
   395                           ;main.c: 82:             {;main.c: 83:             GP4 = 0;
   396  03F6  1205               	bcf	5,4	;volatile
   397  03F7  2BDC               	goto	l740
   398  03F8                     l25:	
   399                           ;main.c: 86:    else
   400                           
   401                           
   402                           ;main.c: 87:    {;main.c: 88:     GP2 = 1;
   403  03F8  1505               	bsf	5,2	;volatile
   404                           
   405                           ;main.c: 90:     GP5 = 1;
   406  03F9  1685               	bsf	5,5	;volatile
   407                           
   408                           ;main.c: 91:     GP4 = 1;
   409  03FA  1605               	bsf	5,4	;volatile
   410  03FB  2BDC               	goto	l740
   411  03FC  2800               	ljmp	start
   412  03FD                     __end_of_main:
   413                           
   414                           	psect	text1
   415  0381                     __ptext1:	
   416 ;; *************** function _InitApp *****************
   417 ;; Defined at:
   418 ;;		line 23 in file "user.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0
   432 ;;      Params:         0       0
   433 ;;      Locals:         0       0
   434 ;;      Temps:          0       0
   435 ;;      Totals:         0       0
   436 ;;Total ram usage:        0 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		_main
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           
   446                           ;psect for function _InitApp
   447  0381                     _InitApp:
   448  0381                     l700:	
   449                           ;incstack = 0
   450                           ; Regs used in _InitApp: [wreg+status,2]
   451                           
   452                           
   453                           ;user.c: 27:     TRISIO = 0b00001001;
   454  0381  3009               	movlw	9
   455  0382  1683               	bsf	3,5	;RP0=1, select bank1
   456  0383  0085               	movwf	5	;volatile
   457                           
   458                           ;user.c: 31:     ANSEL = 0b00010001;
   459  0384  3011               	movlw	17
   460  0385  009F               	movwf	31	;volatile
   461                           
   462                           ;user.c: 32:     ADCON0 = 0b10000001;
   463  0386  3081               	movlw	129
   464  0387  1283               	bcf	3,5	;RP0=0, select bank0
   465  0388  009F               	movwf	31	;volatile
   466                           
   467                           ;user.c: 33:     CMCON = 0x07;
   468  0389  3007               	movlw	7
   469  038A  0099               	movwf	25	;volatile
   470  038B                     l702:
   471                           
   472                           ;user.c: 34:     VRCON = 0x00;
   473  038B  1683               	bsf	3,5	;RP0=1, select bank1
   474  038C  0199               	clrf	25	;volatile
   475  038D                     l50:
   476  038D  0008               	return
   477  038E                     __end_of_InitApp:
   478                           
   479                           	psect	text2
   480  038E                     __ptext2:	
   481 ;; *************** function _GetADCValue *****************
   482 ;; Defined at:
   483 ;;		line 44 in file "user.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  2    0[BANK0 ] unsigned int 
   490 ;; Registers used:
   491 ;;		wreg
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0
   497 ;;      Params:         0       2
   498 ;;      Locals:         0       0
   499 ;;      Temps:          0       2
   500 ;;      Totals:         0       4
   501 ;;Total ram usage:        4 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; This function calls:
   504 ;;		Nothing
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           
   511                           ;psect for function _GetADCValue
   512  038E                     _GetADCValue:
   513  038E                     l704:	
   514                           ;incstack = 0
   515                           ; Regs used in _GetADCValue: [wreg]
   516                           
   517                           
   518                           ;user.c: 49:     _delay((unsigned long)((10)*(4000000/4000.0)));
   519  038E  300D               	movlw	13
   520  038F  1283               	bcf	3,5	;RP0=0, select bank0
   521  0390  00A3               	movwf	??_GetADCValue+1
   522  0391  30FB               	movlw	251
   523  0392  00A2               	movwf	??_GetADCValue
   524  0393                     u137:
   525  0393  0BA2               	decfsz	??_GetADCValue,f
   526  0394  2B93               	goto	u137
   527  0395  0BA3               	decfsz	??_GetADCValue+1,f
   528  0396  2B93               	goto	u137
   529  0397  2B98               	nop2
   530  0398                     l706:
   531                           
   532                           ;user.c: 51:  GO_nDONE = 1;
   533  0398  1283               	bcf	3,5	;RP0=0, select bank0
   534  0399  149F               	bsf	31,1	;volatile
   535                           
   536                           ;user.c: 53:  while(GO_nDONE)
   537  039A  2BA2               	goto	l710
   538  039B                     l708:
   539                           
   540                           ;user.c: 54:     _delay((unsigned long)((1)*(4000000/4000.0)));
   541  039B  30C7               	movlw	199
   542  039C  00A2               	movwf	??_GetADCValue
   543  039D                     u147:
   544  039D  2B9E               	nop2
   545  039E  0BA2               	decfsz	??_GetADCValue,f
   546  039F  2B9D               	goto	u147
   547  03A0  2BA1               	nop2
   548  03A1  2BA2               	nop2
   549  03A2                     l710:
   550                           
   551                           ;user.c: 53:  while(GO_nDONE)
   552  03A2  1283               	bcf	3,5	;RP0=0, select bank0
   553  03A3  189F               	btfsc	31,1	;volatile
   554  03A4  2BA6               	goto	u61
   555  03A5  2BA7               	goto	u60
   556  03A6                     u61:
   557  03A6  2B9B               	goto	l708
   558  03A7                     u60:
   559  03A7                     l712:
   560                           
   561                           ;user.c: 55:     return ((ADRESH<<8)+ADRESL);
   562  03A7  081E               	movf	30,w	;volatile
   563  03A8  00A1               	movwf	?_GetADCValue+1
   564  03A9  1683               	bsf	3,5	;RP0=1, select bank1
   565  03AA  081E               	movf	30,w	;volatile
   566  03AB  1283               	bcf	3,5	;RP0=0, select bank0
   567  03AC  00A0               	movwf	?_GetADCValue
   568  03AD                     l56:
   569  03AD  0008               	return
   570  03AE                     __end_of_GetADCValue:
   571  005E                     btemp	set	94	;btemp
   572  005E                     wtemp0	set	94
   573                           
   574                           	psect	config
   575                           
   576                           ;Config register CONFIG @ 0x2007
   577                           ;	Oscillator Selection bits
   578                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   579                           ;	Watchdog Timer Enable bit
   580                           ;	WDTE = OFF, WDT disabled
   581                           ;	Power-Up Timer Enable bit
   582                           ;	PWRTE = OFF, PWRT disabled
   583                           ;	GP3/MCLR pin function select
   584                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   585                           ;	Brown-out Detect Enable bit
   586                           ;	BOREN = ON, BOD enabled
   587                           ;	Code Protection bit
   588                           ;	CP = OFF, Program Memory code protection is disabled
   589                           ;	Data Code Protection bit
   590                           ;	CPD = OFF, Data memory code protection is disabled
   591  2007                     	org	8199
   592  2007  31D4               	dw	12756

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      9       9

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_GetADCValue

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      90
                                              4 BANK0      5     5      0
                        _GetADCValue
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetADCValue                                          4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetADCValue
   _InitApp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      9       9       4       14.5%
ABS                  0      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Dec 26 17:37:44 2020

                     l25 03F8                       l50 038D                       l56 03AD  
                     u60 03A7                       u61 03A6                       u70 03D2  
                     u71 03D1                       u80 03DB                       u81 03DA  
                     u90 03ED                       u91 03EC                      l700 0381  
                    l710 03A2                      l702 038B                      l712 03A7  
                    l704 038E                      l720 03B1                      l706 0398  
                    l730 03C3                      l722 03B2                      l708 039B  
                    l740 03DC                      l732 03C3                      l724 03B3  
                    l716 03AE                      l742 03E4                      l734 03C9  
                    l726 03B4                      l718 03AF                      l744 03ED  
                    l736 03D2                      l728 03C1                      l746 03F6  
                    l738 03DB                      _GP1 0029                      _GP2 002A  
                    _GP4 002C                      _GP5 002D                      u100 03F6  
                    u101 03F5                      u117 03BA                      u127 03DE  
                    u137 0393                      u147 039D                     _main 03AE  
                   btemp 005E              _GetADCValue 038E                     start 0000  
        __end_of_InitApp 038E                    ?_main 0020                    _CMCON 0019  
                  _ANSEL 009F                    _VRCON 0099                    status 0003  
                  wtemp0 005E          __initialization 03FD             __end_of_main 03FD  
                 ??_main 0024                   _ADCON0 001F                   _ADRESH 001E  
                 _ADRESL 009E                   _TRISIO 0085                ??_InitApp 0000  
__end_of__initialization 03FD           __pcstackCOMMON 0000             ?_GetADCValue 0020  
             __pmaintext 03AE                  _InitApp 0381                  __ptext1 0381  
                __ptext2 038E     end_of_initialization 03FD     __size_of_GetADCValue 0020  
    start_initialization 03FD                ___latbits 0000            __pcstackBANK0 0020  
               ?_InitApp 0020                 _GO_nDONE 00F9         __size_of_InitApp 000D  
          __size_of_main 004F            ??_GetADCValue 0022            main@ADC_value 0027  
    __end_of_GetADCValue 03AE  
