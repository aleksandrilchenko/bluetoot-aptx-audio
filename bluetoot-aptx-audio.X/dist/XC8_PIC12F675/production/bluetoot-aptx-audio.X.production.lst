

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Dec 23 00:29:29 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x5E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC12F675 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0019                     	;# 
    61  001E                     	;# 
    62  001F                     	;# 
    63  0081                     	;# 
    64  0085                     	;# 
    65  008C                     	;# 
    66  008E                     	;# 
    67  0090                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0096                     	;# 
    71  0099                     	;# 
    72  009A                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  009F                     	;# 
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0019                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  008C                     	;# 
    98  008E                     	;# 
    99  0090                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0096                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0019                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  008C                     	;# 
   130  008E                     	;# 
   131  0090                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0096                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0019                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  008C                     	;# 
   162  008E                     	;# 
   163  0090                     	;# 
   164  0095                     	;# 
   165  0096                     	;# 
   166  0096                     	;# 
   167  0099                     	;# 
   168  009A                     	;# 
   169  009A                     	;# 
   170  009B                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  001E                     _ADRESH	set	30
   176  0019                     _CMCON	set	25
   177  001F                     _ADCON0	set	31
   178  00F9                     _GO_nDONE	set	249
   179  002D                     _GP5	set	45
   180  002C                     _GP4	set	44
   181  0029                     _GP1	set	41
   182  002A                     _GP2	set	42
   183  009E                     _ADRESL	set	158
   184  0099                     _VRCON	set	153
   185  009F                     _ANSEL	set	159
   186  0085                     _TRISIO	set	133
   187                           
   188                           	psect	cinit
   189  03FD                     start_initialization:	
   190                           ; #config settings
   191                           
   192  03FD                     __initialization:
   193  03FD                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196  03FD                     __end_of__initialization:
   197  03FD  0183               	clrf	3
   198  03FE  2BA2               	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	cstackCOMMON
   201  0000                     __pcstackCOMMON:
   202  0000                     ??_InitApp:
   203                           
   204                           	psect	cstackBANK0
   205  0020                     __pcstackBANK0:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0020                     ?_InitApp:
   209  0020                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0020                     ?_GetADCValue:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 2 bytes @ 0x0
   217  0020                     	ds	2
   218  0022                     ??_GetADCValue:
   219                           
   220                           ; 1 bytes @ 0x2
   221  0022                     	ds	2
   222  0024                     ??_main:
   223                           
   224                           ; 1 bytes @ 0x4
   225  0024                     	ds	1
   226  0025                     main@ADC_value:
   227                           
   228                           ; 2 bytes @ 0x5
   229  0025                     	ds	2
   230                           
   231                           	psect	maintext
   232  03A2                     __pmaintext:	
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 40 in file "main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;  ADC_value       2    5[BANK0 ] unsigned int 
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0, pclath, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : B00/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0
   252 ;;      Params:         0       0
   253 ;;      Locals:         0       2
   254 ;;      Temps:          0       1
   255 ;;      Totals:         0       3
   256 ;;Total ram usage:        3 bytes
   257 ;; Hardware stack levels required when called:    1
   258 ;; This function calls:
   259 ;;		_GetADCValue
   260 ;;		_InitApp
   261 ;; This function is called by:
   262 ;;		Startup code after reset
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           
   267                           ;psect for function _main
   268  03A2                     _main:
   269  03A2                     l722:	
   270                           ;incstack = 0
   271                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   272                           
   273                           
   274                           ;main.c: 46:     InitApp();
   275  03A2  2375               	fcall	_InitApp
   276  03A3                     l724:
   277  03A3                     l726:
   278                           
   279                           ;main.c: 52:     {;main.c: 56:     ADC_value = GetADCValue();
   280  03A3  2382               	fcall	_GetADCValue
   281  03A4  1283               	bcf	3,5	;RP0=0, select bank0
   282  03A5  0821               	movf	?_GetADCValue+1,w
   283  03A6  00A6               	movwf	main@ADC_value+1
   284  03A7  0820               	movf	?_GetADCValue,w
   285  03A8  00A5               	movwf	main@ADC_value
   286  03A9                     l728:
   287                           
   288                           ;main.c: 58:         if (ADC_value < 10)
   289  03A9  3000               	movlw	0
   290  03AA  0226               	subwf	main@ADC_value+1,w
   291  03AB  300A               	movlw	10
   292  03AC  1903               	skipnz
   293  03AD  0225               	subwf	main@ADC_value,w
   294  03AE  1803               	skipnc
   295  03AF  2BB1               	goto	u101
   296  03B0  2BB2               	goto	u100
   297  03B1                     u101:
   298  03B1  2BBB               	goto	l734
   299  03B2                     u100:
   300  03B2                     l730:
   301                           
   302                           ;main.c: 59:             {;main.c: 60:             GP2 = 0;
   303  03B2  1105               	bcf	5,2	;volatile
   304  03B3                     l732:
   305                           
   306                           ;main.c: 61:             _delay((unsigned long)((1)*(4000000/4000.0)));
   307  03B3  30C7               	movlw	199
   308  03B4  00A4               	movwf	??_main
   309  03B5                     u177:
   310  03B5  2BB6               	nop2
   311  03B6  0BA4               	decfsz	??_main,f
   312  03B7  2BB5               	goto	u177
   313  03B8  2BB9               	nop2
   314  03B9  2BBA               	nop2
   315                           
   316                           ;main.c: 62:             }
   317  03BA  2BA3               	goto	l726
   318  03BB                     l734:
   319  03BB  3000               	movlw	0
   320  03BC  0226               	subwf	main@ADC_value+1,w
   321  03BD  306F               	movlw	111
   322  03BE  1903               	skipnz
   323  03BF  0225               	subwf	main@ADC_value,w
   324  03C0  1C03               	skipc
   325  03C1  2BC3               	goto	u111
   326  03C2  2BC4               	goto	u110
   327  03C3                     u111:
   328  03C3  2BCF               	goto	l742
   329  03C4                     u110:
   330  03C4                     l736:
   331  03C4  3000               	movlw	0
   332  03C5  0226               	subwf	main@ADC_value+1,w
   333  03C6  3082               	movlw	130
   334  03C7  1903               	skipnz
   335  03C8  0225               	subwf	main@ADC_value,w
   336  03C9  1803               	skipnc
   337  03CA  2BCC               	goto	u121
   338  03CB  2BCD               	goto	u120
   339  03CC                     u121:
   340  03CC  2BCF               	goto	l742
   341  03CD                     u120:
   342  03CD                     l738:
   343                           
   344                           ;main.c: 64:             {;main.c: 65:             GP1 = 0;
   345  03CD  1085               	bcf	5,1	;volatile
   346  03CE  2BB3               	goto	l732
   347  03CF                     l742:
   348  03CF  3000               	movlw	0
   349  03D0  0226               	subwf	main@ADC_value+1,w
   350  03D1  30D3               	movlw	211
   351  03D2  1903               	skipnz
   352  03D3  0225               	subwf	main@ADC_value,w
   353  03D4  1C03               	skipc
   354  03D5  2BD7               	goto	u131
   355  03D6  2BD8               	goto	u130
   356  03D7                     u131:
   357  03D7  2BE3               	goto	l750
   358  03D8                     u130:
   359  03D8                     l744:
   360  03D8  3000               	movlw	0
   361  03D9  0226               	subwf	main@ADC_value+1,w
   362  03DA  30F0               	movlw	240
   363  03DB  1903               	skipnz
   364  03DC  0225               	subwf	main@ADC_value,w
   365  03DD  1803               	skipnc
   366  03DE  2BE0               	goto	u141
   367  03DF  2BE1               	goto	u140
   368  03E0                     u141:
   369  03E0  2BE3               	goto	l750
   370  03E1                     u140:
   371  03E1                     l746:
   372                           
   373                           ;main.c: 69:             {;main.c: 70:             GP4 = 0;
   374  03E1  1205               	bcf	5,4	;volatile
   375  03E2  2BB3               	goto	l732
   376  03E3                     l750:
   377  03E3  3001               	movlw	1
   378  03E4  0226               	subwf	main@ADC_value+1,w
   379  03E5  3073               	movlw	115
   380  03E6  1903               	skipnz
   381  03E7  0225               	subwf	main@ADC_value,w
   382  03E8  1C03               	skipc
   383  03E9  2BEB               	goto	u151
   384  03EA  2BEC               	goto	u150
   385  03EB                     u151:
   386  03EB  2BF7               	goto	l29
   387  03EC                     u150:
   388  03EC                     l752:
   389  03EC  3001               	movlw	1
   390  03ED  0226               	subwf	main@ADC_value+1,w
   391  03EE  3090               	movlw	144
   392  03EF  1903               	skipnz
   393  03F0  0225               	subwf	main@ADC_value,w
   394  03F1  1803               	skipnc
   395  03F2  2BF4               	goto	u161
   396  03F3  2BF5               	goto	u160
   397  03F4                     u161:
   398  03F4  2BF7               	goto	l29
   399  03F5                     u160:
   400  03F5                     l754:
   401                           
   402                           ;main.c: 74:             {;main.c: 75:             GP5 = 0;
   403  03F5  1285               	bcf	5,5	;volatile
   404  03F6  2BB3               	goto	l732
   405  03F7                     l29:	
   406                           ;main.c: 78:    else
   407                           
   408                           
   409                           ;main.c: 79:    {;main.c: 80:     GP2 = 1;
   410  03F7  1505               	bsf	5,2	;volatile
   411                           
   412                           ;main.c: 81:     GP1 = 1;
   413  03F8  1485               	bsf	5,1	;volatile
   414                           
   415                           ;main.c: 82:     GP4 = 1;
   416  03F9  1605               	bsf	5,4	;volatile
   417                           
   418                           ;main.c: 83:     GP5 = 1;
   419  03FA  1685               	bsf	5,5	;volatile
   420  03FB  2BB3               	goto	l732
   421  03FC  2800               	ljmp	start
   422  03FD                     __end_of_main:
   423                           
   424                           	psect	text1
   425  0375                     __ptext1:	
   426 ;; *************** function _InitApp *****************
   427 ;; Defined at:
   428 ;;		line 23 in file "user.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0
   442 ;;      Params:         0       0
   443 ;;      Locals:         0       0
   444 ;;      Temps:          0       0
   445 ;;      Totals:         0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels used:    1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           
   456                           ;psect for function _InitApp
   457  0375                     _InitApp:
   458  0375                     l706:	
   459                           ;incstack = 0
   460                           ; Regs used in _InitApp: [wreg+status,2]
   461                           
   462                           
   463                           ;user.c: 27:     TRISIO = 0b00001001;
   464  0375  3009               	movlw	9
   465  0376  1683               	bsf	3,5	;RP0=1, select bank1
   466  0377  0085               	movwf	5	;volatile
   467                           
   468                           ;user.c: 31:     ANSEL = 0b00010001;
   469  0378  3011               	movlw	17
   470  0379  009F               	movwf	31	;volatile
   471                           
   472                           ;user.c: 32:     ADCON0 = 0b10000001;
   473  037A  3081               	movlw	129
   474  037B  1283               	bcf	3,5	;RP0=0, select bank0
   475  037C  009F               	movwf	31	;volatile
   476                           
   477                           ;user.c: 33:     CMCON = 0x07;
   478  037D  3007               	movlw	7
   479  037E  0099               	movwf	25	;volatile
   480  037F                     l708:
   481                           
   482                           ;user.c: 34:     VRCON = 0x00;
   483  037F  1683               	bsf	3,5	;RP0=1, select bank1
   484  0380  0199               	clrf	25	;volatile
   485  0381                     l54:
   486  0381  0008               	return
   487  0382                     __end_of_InitApp:
   488                           
   489                           	psect	text2
   490  0382                     __ptext2:	
   491 ;; *************** function _GetADCValue *****************
   492 ;; Defined at:
   493 ;;		line 44 in file "user.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  2    0[BANK0 ] unsigned int 
   500 ;; Registers used:
   501 ;;		wreg
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0
   507 ;;      Params:         0       2
   508 ;;      Locals:         0       0
   509 ;;      Temps:          0       2
   510 ;;      Totals:         0       4
   511 ;;Total ram usage:        4 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _GetADCValue
   522  0382                     _GetADCValue:
   523  0382                     l710:	
   524                           ;incstack = 0
   525                           ; Regs used in _GetADCValue: [wreg]
   526                           
   527                           
   528                           ;user.c: 49:     _delay((unsigned long)((10)*(4000000/4000.0)));
   529  0382  300D               	movlw	13
   530  0383  1283               	bcf	3,5	;RP0=0, select bank0
   531  0384  00A3               	movwf	??_GetADCValue+1
   532  0385  30FB               	movlw	251
   533  0386  00A2               	movwf	??_GetADCValue
   534  0387                     u187:
   535  0387  0BA2               	decfsz	??_GetADCValue,f
   536  0388  2B87               	goto	u187
   537  0389  0BA3               	decfsz	??_GetADCValue+1,f
   538  038A  2B87               	goto	u187
   539  038B  2B8C               	nop2
   540  038C                     l712:
   541                           
   542                           ;user.c: 51:  GO_nDONE = 1;
   543  038C  1283               	bcf	3,5	;RP0=0, select bank0
   544  038D  149F               	bsf	31,1	;volatile
   545                           
   546                           ;user.c: 53:  while(GO_nDONE)
   547  038E  2B96               	goto	l716
   548  038F                     l714:
   549                           
   550                           ;user.c: 54:     _delay((unsigned long)((1)*(4000000/4000.0)));
   551  038F  30C7               	movlw	199
   552  0390  00A2               	movwf	??_GetADCValue
   553  0391                     u197:
   554  0391  2B92               	nop2
   555  0392  0BA2               	decfsz	??_GetADCValue,f
   556  0393  2B91               	goto	u197
   557  0394  2B95               	nop2
   558  0395  2B96               	nop2
   559  0396                     l716:
   560                           
   561                           ;user.c: 53:  while(GO_nDONE)
   562  0396  1283               	bcf	3,5	;RP0=0, select bank0
   563  0397  189F               	btfsc	31,1	;volatile
   564  0398  2B9A               	goto	u91
   565  0399  2B9B               	goto	u90
   566  039A                     u91:
   567  039A  2B8F               	goto	l714
   568  039B                     u90:
   569  039B                     l718:
   570                           
   571                           ;user.c: 55:     return ((ADRESH<<8)+ADRESL);
   572  039B  081E               	movf	30,w	;volatile
   573  039C  00A1               	movwf	?_GetADCValue+1
   574  039D  1683               	bsf	3,5	;RP0=1, select bank1
   575  039E  081E               	movf	30,w	;volatile
   576  039F  1283               	bcf	3,5	;RP0=0, select bank0
   577  03A0  00A0               	movwf	?_GetADCValue
   578  03A1                     l60:
   579  03A1  0008               	return
   580  03A2                     __end_of_GetADCValue:
   581  005E                     btemp	set	94	;btemp
   582  005E                     wtemp0	set	94
   583                           
   584                           	psect	config
   585                           
   586                           ;Config register CONFIG @ 0x2007
   587                           ;	Oscillator Selection bits
   588                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   589                           ;	Watchdog Timer Enable bit
   590                           ;	WDTE = OFF, WDT disabled
   591                           ;	Power-Up Timer Enable bit
   592                           ;	PWRTE = OFF, PWRT disabled
   593                           ;	GP3/MCLR pin function select
   594                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   595                           ;	Brown-out Detect Enable bit
   596                           ;	BOREN = ON, BOD enabled
   597                           ;	Code Protection bit
   598                           ;	CP = OFF, Program Memory code protection is disabled
   599                           ;	Data Code Protection bit
   600                           ;	CPD = OFF, Data memory code protection is disabled
   601  2007                     	org	8199
   602  2007  31D4               	dw	12756

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7       7

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_GetADCValue

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     156
                                              4 BANK0      3     3      0
                        _GetADCValue
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetADCValue                                          4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetADCValue
   _InitApp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      7       7       4       11.3%
ABS                  0      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Dec 23 00:29:29 2020

                     l60 03A1                       l29 03F7                       l54 0381  
                     u90 039B                       u91 039A                      l710 0382  
                    l712 038C                      l714 038F                      l706 0375  
                    l730 03B2                      l722 03A2                      l716 0396  
                    l708 037F                      l732 03B3                      l724 03A3  
                    l718 039B                      l750 03E3                      l742 03CF  
                    l734 03BB                      l726 03A3                      l752 03EC  
                    l744 03D8                      l736 03C4                      l728 03A9  
                    l754 03F5                      l746 03E1                      l738 03CD  
                    _GP1 0029                      _GP2 002A                      _GP4 002C  
                    _GP5 002D                      u100 03B2                      u101 03B1  
                    u110 03C4                      u111 03C3                      u120 03CD  
                    u121 03CC                      u130 03D8                      u131 03D7  
                    u140 03E1                      u141 03E0                      u150 03EC  
                    u151 03EB                      u160 03F5                      u161 03F4  
                    u177 03B5                      u187 0387                      u197 0391  
                   _main 03A2                     btemp 005E              _GetADCValue 0382  
                   start 0000          __end_of_InitApp 0382                    ?_main 0020  
                  _CMCON 0019                    _ANSEL 009F                    _VRCON 0099  
                  status 0003                    wtemp0 005E          __initialization 03FD  
           __end_of_main 03FD                   ??_main 0024                   _ADCON0 001F  
                 _ADRESH 001E                   _ADRESL 009E                   _TRISIO 0085  
              ??_InitApp 0000  __end_of__initialization 03FD           __pcstackCOMMON 0000  
           ?_GetADCValue 0020               __pmaintext 03A2                  _InitApp 0375  
                __ptext1 0375                  __ptext2 0382     end_of_initialization 03FD  
   __size_of_GetADCValue 0020      start_initialization 03FD                ___latbits 0000  
          __pcstackBANK0 0020                 ?_InitApp 0020                 _GO_nDONE 00F9  
       __size_of_InitApp 000D            __size_of_main 005B            ??_GetADCValue 0022  
          main@ADC_value 0025      __end_of_GetADCValue 03A2  
